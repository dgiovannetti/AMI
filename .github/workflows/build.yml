name: Build AMI

on:
  push:
    branches: [ main, master ]
    tags:
      - 'v*'
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:  # Permette build manuale

jobs:
  build-windows:
    name: Build for Windows
    runs-on: windows-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r requirements-build.txt
    
    - name: Generate icons (if present)
      run: |
        python - <<'PY'
        import os, runpy
        p = 'tools/generate_icons.py'
        if os.path.exists(p):
            runpy.run_path(p, run_name='__main__')
        else:
            print('No icon generator found, skipping')
        PY
    
    - name: Build executable
      run: python build.py
    
    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: AMI-Windows
        path: dist/AMI-Windows.zip
        retention-days: 30
    
    - name: Create Release (if tag)
      if: startsWith(github.ref, 'refs/tags/')
      uses: softprops/action-gh-release@v1
      with:
        files: dist/AMI-Windows.zip
        name: AMI ${{ github.ref_name }}
        body: |
          ## AMI - Active Monitor of Internet
          
          **Version:** ${{ github.ref_name }}
          
          ### 📥 Download
          - **Windows:** AMI-Windows.zip
          
          ### 🚀 Quick Start
          1. Scarica `AMI-Windows.zip`
          2. Estrai lo ZIP (troverai `AMI-Package/AMI.exe`)
          3. Esegui `AMI.exe`
          
          ### ✨ Features
          - 🟢 Monitor connessione in tempo reale
          - 📊 Dashboard con grafici
          - 📝 Logging eventi
          - 💬 Notifiche Windows
          - ⚙️ Altamente configurabile
          
          **"Sai se sei davvero online."**
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-macos:
    name: Build for macOS
    runs-on: macos-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r requirements-build.txt
    
    - name: Generate icons (if present)
      run: |
        python - <<'PY'
        import os, runpy
        p = 'tools/generate_icons.py'
        if os.path.exists(p):
            runpy.run_path(p, run_name='__main__')
        else:
            print('No icon generator found, skipping')
        PY
    
    - name: Build executable
      run: python build.py
    
    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: AMI-macOS
        path: dist/AMI-macOS.zip
        retention-days: 30
    
    - name: Create Release (if tag)
      if: startsWith(github.ref, 'refs/tags/')
      uses: softprops/action-gh-release@v1
      with:
        files: dist/AMI-macOS.zip
        name: AMI ${{ github.ref_name }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
